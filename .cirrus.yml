setup: &SETUP
  env:
    HOME: /tmp # cargo needs it
    RUST_BACKTRACE: full  # Better info for debugging test failures.
  setup_script:
    - fetch https://sh.rustup.rs -o rustup.sh
    - sh rustup.sh -y --profile=minimal --default-toolchain ${VERSION}-x86_64-unknown-freebsd

build: &BUILD
  cargo_cache:
    folder: $HOME/.cargo/registry
    fingerprint_script: cat Cargo.lock || echo ""
  build_script:
    - . $HOME/.cargo/env || true
    - cargo build --all
  test_script:
    - . $HOME/.cargo/env || true
    - cargo test --all

task:
  env:
    VERSION: 1.70.0
  name: FreeBSD 13.2 MSRV
  freebsd_instance:
    image: freebsd-13-2-release-amd64
  << : *SETUP
  << : *BUILD
  before_cache_script: rm -rf $HOME/.cargo/registry/index

task:
  name: FreeBSD 14.0 nightly
  env:
    VERSION: nightly
  freebsd_instance:
    image: freebsd-14-0-release-amd64-ufs
  << : *SETUP
  << : *BUILD
  clippy_script:
    - . $HOME/.cargo/env
    - rustup component add clippy
    - cargo clippy --all-features --all-targets -- -D warnings
  fmt_script:
    - . $HOME/.cargo/env
    - rustup component add rustfmt
    - cargo fmt --all -- --check --color=never
  audit_script:
    - . $HOME/.cargo/env
    - cargo install --version=0.17.6 cargo-audit
    - cargo audit
  # Test our minimal version spec
  minver_test_script:
    - . $HOME/.cargo/env
    - cargo update -Zdirect-minimal-versions
    - cargo check --all-targets
  before_cache_script: rm -rf $HOME/.cargo/registry/index

task:
  name: Linux MSRV
  container:
    image: rust:1.70.0
  setup_script:
    - rustup component add rustfmt
  << : *BUILD
  before_cache_script: rm -rf $HOME/.cargo/registry/index
